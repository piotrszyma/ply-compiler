
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'A18D8541AD3FC746E69D71833CEA4297'
    
_lr_action_items = {'VAR':([0,],[2,]),'$end':([1,17,],[0,-1,]),'BEGIN':([2,3,4,6,45,],[-32,5,-4,-2,-3,]),'PIDENTIFIER':([2,3,4,5,6,7,8,10,11,12,14,15,18,19,26,32,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,59,68,69,70,71,72,73,76,77,78,79,80,81,82,],[-32,6,-4,13,-2,13,-6,13,13,25,13,13,-5,13,41,13,13,13,13,13,13,13,13,13,-13,-14,-3,-7,13,13,13,13,13,13,13,13,-9,-10,13,13,13,-8,13,13,13,13,-11,-12,]),'IF':([5,7,8,18,32,39,43,44,46,52,59,68,69,70,73,76,77,78,79,80,81,82,],[10,10,-6,-5,10,10,-13,-14,-7,10,10,10,-9,-10,10,-8,10,10,10,10,-11,-12,]),'WHILE':([5,7,8,18,32,39,43,44,46,52,59,68,69,70,73,76,77,78,79,80,81,82,],[11,11,-6,-5,11,11,-13,-14,-7,11,11,11,-9,-10,11,-8,11,11,11,11,-11,-12,]),'FOR':([5,7,8,18,32,39,43,44,46,52,59,68,69,70,73,76,77,78,79,80,81,82,],[12,12,-6,-5,12,12,-13,-14,-7,12,12,12,-9,-10,12,-8,12,12,12,12,-11,-12,]),'READ':([5,7,8,18,32,39,43,44,46,52,59,68,69,70,73,76,77,78,79,80,81,82,],[14,14,-6,-5,14,14,-13,-14,-7,14,14,14,-9,-10,14,-8,14,14,14,14,-11,-12,]),'WRITE':([5,7,8,18,32,39,43,44,46,52,59,68,69,70,73,76,77,78,79,80,81,82,],[15,15,-6,-5,15,15,-13,-14,-7,15,15,15,-9,-10,15,-8,15,15,15,15,-11,-12,]),'LBRACKET':([6,13,],[16,26,]),'END':([7,8,18,43,44,46,69,70,76,81,82,],[17,-6,-5,-13,-14,-7,-9,-10,-8,-11,-12,]),'ELSE':([8,18,43,44,46,52,69,70,76,81,82,],[-6,-5,-13,-14,-7,68,-9,-10,-8,-11,-12,]),'ENDIF':([8,18,43,44,46,52,69,70,73,76,81,82,],[-6,-5,-13,-14,-7,69,-9,-10,76,-8,-11,-12,]),'ENDWHILE':([8,18,43,44,46,59,69,70,76,81,82,],[-6,-5,-13,-14,-7,70,-9,-10,-8,-11,-12,]),'ENDFOR':([8,18,43,44,46,69,70,76,79,80,81,82,],[-6,-5,-13,-14,-7,-9,-10,-8,81,82,-11,-12,]),'ASSIGN':([9,13,61,62,],[19,-29,-30,-31,]),'NUMBER':([10,11,15,16,19,26,33,34,35,36,37,38,40,47,48,49,50,51,71,72,],[22,22,22,29,22,42,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'EQ':([13,21,22,23,61,62,],[-29,33,-27,-28,-30,-31,]),'NE':([13,21,22,23,61,62,],[-29,34,-27,-28,-30,-31,]),'LT':([13,21,22,23,61,62,],[-29,35,-27,-28,-30,-31,]),'GT':([13,21,22,23,61,62,],[-29,36,-27,-28,-30,-31,]),'LE':([13,21,22,23,61,62,],[-29,37,-27,-28,-30,-31,]),'GE':([13,21,22,23,61,62,],[-29,38,-27,-28,-30,-31,]),'SEMICOLON':([13,22,23,27,28,30,31,61,62,63,64,65,66,67,],[-29,-27,-28,43,44,46,-15,-30,-31,-16,-17,-18,-19,-20,]),'PLUS':([13,22,23,31,61,62,],[-29,-27,-28,47,-30,-31,]),'MINUS':([13,22,23,31,61,62,],[-29,-27,-28,48,-30,-31,]),'TIMES':([13,22,23,31,61,62,],[-29,-27,-28,49,-30,-31,]),'DIVIDE':([13,22,23,31,61,62,],[-29,-27,-28,50,-30,-31,]),'MODULO':([13,22,23,31,61,62,],[-29,-27,-28,51,-30,-31,]),'THEN':([13,20,22,23,53,54,55,56,57,58,61,62,],[-29,32,-27,-28,-21,-22,-23,-24,-25,-26,-30,-31,]),'DO':([13,22,23,24,53,54,55,56,57,58,61,62,74,75,],[-29,-27,-28,39,-21,-22,-23,-24,-25,-26,-30,-31,77,78,]),'TO':([13,22,23,60,61,62,],[-29,-27,-28,71,-30,-31,]),'DOWNTO':([13,22,23,60,61,62,],[-29,-27,-28,72,-30,-31,]),'FROM':([25,],[40,]),'RBRACKET':([29,41,42,],[45,61,62,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'vdeclarations':([2,],[3,]),'empty':([2,],[4,]),'commands':([5,32,39,68,77,78,],[7,52,59,73,79,80,]),'command':([5,7,32,39,52,59,68,73,77,78,79,80,],[8,18,8,8,18,18,8,18,8,8,18,18,]),'identifier':([5,7,10,11,14,15,19,32,33,34,35,36,37,38,39,40,47,48,49,50,51,52,59,68,71,72,73,77,78,79,80,],[9,9,23,23,27,23,23,9,23,23,23,23,23,23,9,23,23,23,23,23,23,9,9,9,23,23,9,9,9,9,9,]),'condition':([10,11,],[20,24,]),'value':([10,11,15,19,33,34,35,36,37,38,40,47,48,49,50,51,71,72,],[21,21,28,31,53,54,55,56,57,58,60,63,64,65,66,67,74,75,]),'expression':([19,],[30,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> VAR vdeclarations BEGIN commands END','program',5,'p_program','parser.py',26),
  ('vdeclarations -> vdeclarations PIDENTIFIER','vdeclarations',2,'p_vdeclarations_number','parser.py',32),
  ('vdeclarations -> vdeclarations PIDENTIFIER LBRACKET NUMBER RBRACKET','vdeclarations',5,'p_vdeclarations_table','parser.py',37),
  ('vdeclarations -> empty','vdeclarations',1,'p_vdeclarations_empty','parser.py',42),
  ('commands -> commands command','commands',2,'p_commands','parser.py',48),
  ('commands -> command','commands',1,'p_commands','parser.py',49),
  ('command -> identifier ASSIGN expression SEMICOLON','command',4,'p_command_assign','parser.py',59),
  ('command -> IF condition THEN commands ELSE commands ENDIF','command',7,'p_command_if_else','parser.py',63),
  ('command -> IF condition THEN commands ENDIF','command',5,'p_command_if_then','parser.py',67),
  ('command -> WHILE condition DO commands ENDWHILE','command',5,'p_command_while','parser.py',71),
  ('command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR','command',9,'p_command_for_up','parser.py',75),
  ('command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR','command',9,'p_command_for_down','parser.py',80),
  ('command -> READ identifier SEMICOLON','command',3,'p_command_read','parser.py',85),
  ('command -> WRITE value SEMICOLON','command',3,'p_command_write','parser.py',89),
  ('expression -> value','expression',1,'p_expression_value','parser.py',95),
  ('expression -> value PLUS value','expression',3,'p_expression','parser.py',99),
  ('expression -> value MINUS value','expression',3,'p_expression','parser.py',100),
  ('expression -> value TIMES value','expression',3,'p_expression','parser.py',101),
  ('expression -> value DIVIDE value','expression',3,'p_expression','parser.py',102),
  ('expression -> value MODULO value','expression',3,'p_expression','parser.py',103),
  ('condition -> value EQ value','condition',3,'p_condition','parser.py',109),
  ('condition -> value NE value','condition',3,'p_condition','parser.py',110),
  ('condition -> value LT value','condition',3,'p_condition','parser.py',111),
  ('condition -> value GT value','condition',3,'p_condition','parser.py',112),
  ('condition -> value LE value','condition',3,'p_condition','parser.py',113),
  ('condition -> value GE value','condition',3,'p_condition','parser.py',114),
  ('value -> NUMBER','value',1,'p_value','parser.py',120),
  ('value -> identifier','value',1,'p_value','parser.py',121),
  ('identifier -> PIDENTIFIER','identifier',1,'p_identifier_pidentifier','parser.py',127),
  ('identifier -> PIDENTIFIER LBRACKET PIDENTIFIER RBRACKET','identifier',4,'p_identifier_table_id','parser.py',131),
  ('identifier -> PIDENTIFIER LBRACKET NUMBER RBRACKET','identifier',4,'p_identifier_table_number','parser.py',136),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',142),
]
